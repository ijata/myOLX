-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL,
    accoutcategoryid integer NOT NULL,
    username character varying(300) NOT NULL,
    password character varying NOT NULL,
    name character varying NOT NULL,
    lastname character varying NOT NULL,
    adress character varying,
    zipcode character varying(20),
    city character varying,
    contury character varying,
    phone integer,
    email character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.offers
(
    id integer NOT NULL,
    offercategoryid integer,
    userid integer NOT NULL,
    title character varying NOT NULL,
    description text,
    used boolean,
    private boolean,
    date_start date,
    date_end date,
    sold boolean,
    active boolean,
    veryfied boolean,
    whoweryfied integer,
    currencyid integer NOT NULL,
    value double precision NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.account_category
(
    id integer NOT NULL,
    name character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.offer_category
(
    id integer NOT NULL,
    name character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.offers_file
(
    id integer NOT NULL,
    offerid integer NOT NULL,
    lp integer NOT NULL,
    path character varying NOT NULL,
    file text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.currency
(
    id integer NOT NULL,
    name character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.message
(
    id integer NOT NULL,
    offerid integer NOT NULL,
    userid integer NOT NULL,
    buyerid integer NOT NULL,
    text text NOT NULL,
    date date NOT NULL,
    read boolean,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.users
    ADD FOREIGN KEY (accoutcategoryid)
    REFERENCES public.account_category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.offers
    ADD FOREIGN KEY (userid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.offers
    ADD FOREIGN KEY (currencyid)
    REFERENCES public.currency (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.offers
    ADD FOREIGN KEY (offercategoryid)
    REFERENCES public.offer_category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.offers_file
    ADD FOREIGN KEY (offerid)
    REFERENCES public.offers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.message
    ADD FOREIGN KEY (offerid)
    REFERENCES public.offers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.message
    ADD FOREIGN KEY (userid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.message
    ADD FOREIGN KEY (buyerid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;